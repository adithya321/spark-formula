# This file is generated by SaltStack. Any changes will be overwritten
{% from "spark/map.jinja" import spark  with context %}
export JAVA_HOME={{ salt['grains.get']('spark:lookup:java_home', spark.java_home) }}
export SPARK_HOME={{ spark.alt_root }}
export SPARK_CONF_DIR={{ spark.config_dir }}
export SPARK_MASTER_HOST={{ salt['grains.get']('spark:lookup:master_host',  spark.master_host) }}
export SPARK_MASTER_PORT={{ salt['grains.get']('spark:lookup:master_port', spark.master_port) }}
export SPARK_LOG_DIR={{ salt['grains.get']('spark:lookup:log_dir', spark.log_dir) }}
export SPARK_PID_DIR={{ salt['grains.get']('spark:lookup:pid_dir', spark.pid_dir) }}
export SPARK_WORKER_CORES={{ salt['grains.get']('spark:lookup:worker_cores', spark.worker_cores) }}
export SPARK_WORKER_MEMORY={{ salt['grains.get']('spark:lookup:worker_memory', spark.worker_memory) }}
export SPARK_WORKER_WEBUI_PORT={{ salt['grains.get']('spark:lookup:worker_webui_port', spark.worker_webui_port) }}
export SPARK_WORKER_DIR={{ salt['grains.get']('spark:lookup:work_dir', spark.work_dir) }}
{% if spark.with_hadoop != True %}
{% set hadoop_home = "$HADOOP_HOME" %}
{%- if spark.hadoop_home is defined %}
{% set hadoop_home = spark.hadoop_home %}
{%- endif %}
export HADOOP_CONF_DIR={{ '%s/etc/hadoop'|format(hadoop_home) }}
export SPARK_DIST_CLASSPATH=$({{ hadoop_home }}/bin/hadoop classpath):{{ spark.alt_root }}/jars/
{% endif %}
{% if spark.worker_opts is mapping and spark.worker_opts.keys()|length %}
export SPARK_WORKER_OPTS="{% for k,v in spark.worker_opts.items() %}-D{{ k }}={{ v }} {% endfor %}"
{% endif %}
export SPARK_DAEMON_MEMORY={{ spark.daemon_memory }}
export SPARK_NICENESS={{ spark.niceness }}

{% if spark.daemon_java_opts -%}
export SPARK_DAEMON_JAVA_OPTS="{% for k,v in spark.daemon_java_opts.items() %}-D{{ k }}={{ v }} {% endfor %}"
{% endif %}

{% if spark.public_dns %}
export SPARK_PUBLIC_DNS={{ spark.public_dns }}
{% endif %}
